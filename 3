def is_safe(board, row, col):
    for i in range(col):
        if board[row][i] == 1:
            return False


    for i, j in zip(range(row, -1, -1), range(col, -1, -1)):
        if board[i][j] == 1:
            return False


    for i, j in zip(range(row, 8, 1), range(col, -1, -1)):
        if board[i][j] == 1:
            return False

    return True


def solve(board, col, solutions):
    if col == 8:
        solutions.append([row[:] for row in board])
        return

    for i in range(8):
        if is_safe(board, i, col):
            board[i][col] = 1
            solve(board, col + 1, solutions)
            board[i][col] = 0


board = [[0 for _ in range(8)] for _ in range(8)]
solutions = []
solve(board, 0, solutions)

print(f'Всего найдено {len(solutions)} возможных расстановок ферзей.')
for i, solution in enumerate(solutions):
    print(f'Решение {i + 1}:')
    for row in solution:
        print(row)
